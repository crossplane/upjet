{{ .Header }}

{{ .GenStatement }}

package {{ .APIVersion }}

import (
	ujconversion "github.com/crossplane/upjet/v2/pkg/controller/conversion"
	"github.com/crossplane/upjet/v2/pkg/resource"
	"github.com/pkg/errors"
	"sigs.k8s.io/controller-runtime/pkg/conversion"
)

{{ range .Resources }}
	// ConvertTo converts this {{ .CRD.Kind }} to the hub type.
	func (tr *{{ .CRD.Kind }}) ConvertTo(dstRaw conversion.Hub) error {
		spokeVersion := tr.GetObjectKind().GroupVersionKind().Version
		hubVersion := dstRaw.GetObjectKind().GroupVersionKind().Version
		if err := ujconversion.RoundTrip(dstRaw.(resource.Terraformed), tr); err != nil {
			return errors.Wrapf(err, "cannot convert from the spoke version %q to the hub version %q", spokeVersion, hubVersion)
		}
		return nil
	}

	// ConvertFrom converts from the hub type to the {{ .CRD.Kind }} type.
	func (tr *{{ .CRD.Kind }}) ConvertFrom(srcRaw conversion.Hub) error {
		spokeVersion := tr.GetObjectKind().GroupVersionKind().Version
		hubVersion := srcRaw.GetObjectKind().GroupVersionKind().Version
		if err := ujconversion.RoundTrip(tr, srcRaw.(resource.Terraformed)); err != nil {
			return errors.Wrapf(err, "cannot convert from the hub version %q to the spoke version %q", hubVersion, spokeVersion)
		}
		return nil
	}
{{ end }}
